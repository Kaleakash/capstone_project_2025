{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../login.service\";\nimport * as i2 from \"@angular/forms\";\nclass LoginComponent {\n  constructor(ls) {\n    this.ls = ls;\n    this.loginForm = new FormGroup({\n      emailid: new FormControl(''),\n      password: new FormControl(''),\n      typeofuser: new FormControl('')\n    });\n    this.message = \"\";\n  } // DI for LoginService \n  signIn() {\n    let login = this.loginForm.value;\n    //console.log(login);\n    this.ls.signIn(login).subscribe({\n      next: result => {\n        // console.log(result)\n        this.message = result;\n      },\n      error: error => {\n        console.log(error);\n      },\n      complete: () => {\n        //console.log(\"Login completed\")\n      }\n    });\n    this.loginForm.reset();\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 22,\n      vars: 1,\n      consts: [[2, \"color\", \"red\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"formControlName\", \"emailid\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"radio\", \"formControlName\", \"typeofuser\", \"value\", \"admin\"], [\"type\", \"radio\", \"formControlName\", \"typeofuser\", \"value\", \"customer\"], [\"type\", \"submit\", \"value\", \"SignIn\"], [\"type\", \"reset\", \"value\", \"Reset\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\");\n          i0.ɵɵelement(1, \"span\", 0);\n          i0.ɵɵelementStart(2, \"h2\");\n          i0.ɵɵtext(3, \"Login Page\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.signIn();\n          });\n          i0.ɵɵelementStart(5, \"label\");\n          i0.ɵɵtext(6, \"EmailId\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 2)(8, \"br\");\n          i0.ɵɵelementStart(9, \"label\");\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 3)(12, \"br\");\n          i0.ɵɵelementStart(13, \"label\");\n          i0.ɵɵtext(14, \"TypeOfUser\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 4);\n          i0.ɵɵtext(16, \"Admin \");\n          i0.ɵɵelement(17, \"input\", 5);\n          i0.ɵɵtext(18, \"Customer\");\n          i0.ɵɵelement(19, \"br\")(20, \"input\", 6)(21, \"input\", 7);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { LoginComponent };","map":{"version":3,"names":["FormControl","FormGroup","LoginComponent","constructor","ls","loginForm","emailid","password","typeofuser","message","signIn","login","value","subscribe","next","result","error","console","log","complete","reset","i0","ɵɵdirectiveInject","i1","LoginService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\Desktop\\Caltech 2024 Oct Batch\\capstone project\\frontend\\login-app\\src\\app\\login\\login.component.ts","D:\\Desktop\\Caltech 2024 Oct Batch\\capstone project\\frontend\\login-app\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  loginForm = new FormGroup({\n    emailid:new FormControl(''),\n    password:new FormControl(''),\n    typeofuser:new FormControl(''),\n  })\n\n  constructor(public ls:LoginService) { }   // DI for LoginService \n  message:string =\"\"\n  signIn():void {\n    let login = this.loginForm.value;\n    //console.log(login);\n    this.ls.signIn(login).subscribe(\n      {\n        next:(result)=> {\n         // console.log(result)\n         this.message = result;\n        },\n        error:(error)=> {\n          console.log(error)\n        },\n        complete:()=> {\n          //console.log(\"Login completed\")\n        }\n      });\n    this.loginForm.reset();\n  }\n}\n","<div>\n    <span style=\"color:red\"></span>\n    <h2>Login Page</h2>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"signIn()\">\n        <label>EmailId</label>\n        <input type=\"email\" formControlName=\"emailid\"/><br/>\n        <label>Password</label>\n        <input type=\"password\" formControlName=\"password\"/><br/>\n        <label>TypeOfUser</label>\n        <input type=\"radio\" formControlName=\"typeofuser\" value=\"admin\"/>Admin\n        <input type=\"radio\" formControlName=\"typeofuser\" value=\"customer\"/>Customer<br/>\n        <input type=\"submit\" value=\"SignIn\" />\n        <input type=\"reset\" value=\"Reset\" />\n    </form>\n</div>"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;AAGvD,MAKaC,cAAc;EAQzBC,YAAmBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IANrB,KAAAC,SAAS,GAAG,IAAIJ,SAAS,CAAC;MACxBK,OAAO,EAAC,IAAIN,WAAW,CAAC,EAAE,CAAC;MAC3BO,QAAQ,EAAC,IAAIP,WAAW,CAAC,EAAE,CAAC;MAC5BQ,UAAU,EAAC,IAAIR,WAAW,CAAC,EAAE;KAC9B,CAAC;IAGF,KAAAS,OAAO,GAAS,EAAE;EADoB,CAAC,CAAG;EAE1CC,MAAMA,CAAA;IACJ,IAAIC,KAAK,GAAG,IAAI,CAACN,SAAS,CAACO,KAAK;IAChC;IACA,IAAI,CAACR,EAAE,CAACM,MAAM,CAACC,KAAK,CAAC,CAACE,SAAS,CAC7B;MACEC,IAAI,EAAEC,MAAM,IAAG;QACd;QACA,IAAI,CAACN,OAAO,GAAGM,MAAM;MACtB,CAAC;MACDC,KAAK,EAAEA,KAAK,IAAG;QACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC;MACDG,QAAQ,EAACA,CAAA,KAAI;QACX;MAAA;KAEH,CAAC;IACJ,IAAI,CAACd,SAAS,CAACe,KAAK,EAAE;EACxB;;;uBA3BWlB,cAAc,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;IAAA;EAAA;;;YAAdtB,cAAc;MAAAuB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT3BV,EAAA,CAAAY,cAAA,UAAK;UACDZ,EAAA,CAAAa,SAAA,cAA+B;UAC/Bb,EAAA,CAAAY,cAAA,SAAI;UAAAZ,EAAA,CAAAc,MAAA,iBAAU;UAAAd,EAAA,CAAAe,YAAA,EAAK;UACnBf,EAAA,CAAAY,cAAA,cAAoD;UAAtBZ,EAAA,CAAAgB,UAAA,sBAAAC,iDAAA;YAAA,OAAYN,GAAA,CAAAtB,MAAA,EAAQ;UAAA,EAAC;UAC/CW,EAAA,CAAAY,cAAA,YAAO;UAAAZ,EAAA,CAAAc,MAAA,cAAO;UAAAd,EAAA,CAAAe,YAAA,EAAQ;UACtBf,EAAA,CAAAa,SAAA,eAA+C;UAC/Cb,EAAA,CAAAY,cAAA,YAAO;UAAAZ,EAAA,CAAAc,MAAA,gBAAQ;UAAAd,EAAA,CAAAe,YAAA,EAAQ;UACvBf,EAAA,CAAAa,SAAA,gBAAmD;UACnDb,EAAA,CAAAY,cAAA,aAAO;UAAAZ,EAAA,CAAAc,MAAA,kBAAU;UAAAd,EAAA,CAAAe,YAAA,EAAQ;UACzBf,EAAA,CAAAa,SAAA,gBAAgE;UAAAb,EAAA,CAAAc,MAAA,cAChE;UAAAd,EAAA,CAAAa,SAAA,gBAAmE;UAAAb,EAAA,CAAAc,MAAA,gBAAQ;UAAAd,EAAA,CAAAa,SAAA,UAAK;UAGpFb,EAAA,CAAAe,YAAA,EAAO;;;UAVDf,EAAA,CAAAkB,SAAA,GAAuB;UAAvBlB,EAAA,CAAAmB,UAAA,cAAAR,GAAA,CAAA3B,SAAA,CAAuB;;;;;;;;SDMpBH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}