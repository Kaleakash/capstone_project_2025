{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(ls, router) {\n    this.ls = ls;\n    this.router = router;\n    this.loginForm = new FormGroup({\n      emailid: new FormControl(''),\n      password: new FormControl(''),\n      typeofuser: new FormControl('')\n    });\n    this.message = \"\";\n  } // DI for LoginService \n  signIn() {\n    let login = this.loginForm.value;\n    //console.log(login);\n    this.ls.signIn(login).subscribe({\n      next: result => {\n        // console.log(result)\n        this.message = result;\n        if (login.emailid != null) {\n          if (result == \"Admin login successfully\") {\n            //sessionStorage.setItem(\"user\",login.emailid);\n            this.router.navigate(['admin_home']);\n          } else if (result == \"Customer login successfully\") {\n            //alert(login.emailid)\n            sessionStorage.setItem(\"user\", login.emailid);\n            this.router.navigate(['customer_home']);\n          } else {\n            this.message = result;\n          }\n        }\n      },\n      error: error => {\n        console.log(error);\n      },\n      complete: () => {\n        //console.log(\"Login completed\")\n      }\n    });\n    this.loginForm.reset();\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","LoginComponent","constructor","ls","router","loginForm","emailid","password","typeofuser","message","signIn","login","value","subscribe","next","result","navigate","sessionStorage","setItem","error","console","log","complete","reset","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Desktop\\Caltech 2024 Oct Batch\\capstone project\\frontend\\login-app\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  loginForm = new FormGroup({\n    emailid:new FormControl(''),\n    password:new FormControl(''),\n    typeofuser:new FormControl(''),\n  })\n\n  constructor(public ls:LoginService,public router:Router) { }   // DI for LoginService \n  message:string =\"\"\n  signIn():void {\n    let login = this.loginForm.value;\n    //console.log(login);\n    this.ls.signIn(login).subscribe(\n      {\n        next:(result)=> {\n         // console.log(result)\n         this.message = result;\n         if(login.emailid!=null){\n\n          if(result==\"Admin login successfully\"){\n            //sessionStorage.setItem(\"user\",login.emailid);\n            this.router.navigate(['admin_home']);\n         }else if(result==\"Customer login successfully\"){\n          //alert(login.emailid)\n             sessionStorage.setItem(\"user\",login.emailid);\n            this.router.navigate(['customer_home']);\n         }else {\n          this.message = result;\n         }\n         \n         }\n         \n        },\n        error:(error)=> {\n          console.log(error)\n        },\n        complete:()=> {\n          //console.log(\"Login completed\")\n        }\n      });\n    this.loginForm.reset();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AASvD,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAQzBC,YAAmBC,EAAe,EAAQC,MAAa;IAApC,KAAAD,EAAE,GAAFA,EAAE;IAAqB,KAAAC,MAAM,GAANA,MAAM;IANhD,KAAAC,SAAS,GAAG,IAAIL,SAAS,CAAC;MACxBM,OAAO,EAAC,IAAIP,WAAW,CAAC,EAAE,CAAC;MAC3BQ,QAAQ,EAAC,IAAIR,WAAW,CAAC,EAAE,CAAC;MAC5BS,UAAU,EAAC,IAAIT,WAAW,CAAC,EAAE;KAC9B,CAAC;IAGF,KAAAU,OAAO,GAAS,EAAE;EADyC,CAAC,CAAG;EAE/DC,MAAMA,CAAA;IACJ,IAAIC,KAAK,GAAG,IAAI,CAACN,SAAS,CAACO,KAAK;IAChC;IACA,IAAI,CAACT,EAAE,CAACO,MAAM,CAACC,KAAK,CAAC,CAACE,SAAS,CAC7B;MACEC,IAAI,EAAEC,MAAM,IAAG;QACd;QACA,IAAI,CAACN,OAAO,GAAGM,MAAM;QACrB,IAAGJ,KAAK,CAACL,OAAO,IAAE,IAAI,EAAC;UAEtB,IAAGS,MAAM,IAAE,0BAA0B,EAAC;YACpC;YACA,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;WACtC,MAAK,IAAGD,MAAM,IAAE,6BAA6B,EAAC;YAC9C;YACGE,cAAc,CAACC,OAAO,CAAC,MAAM,EAACP,KAAK,CAACL,OAAO,CAAC;YAC7C,IAAI,CAACF,MAAM,CAACY,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;WACzC,MAAK;YACL,IAAI,CAACP,OAAO,GAAGM,MAAM;;;MAKvB,CAAC;MACDI,KAAK,EAAEA,KAAK,IAAG;QACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC;MACDG,QAAQ,EAACA,CAAA,KAAI;QACX;MAAA;KAEH,CAAC;IACJ,IAAI,CAACjB,SAAS,CAACkB,KAAK,EAAE;EACxB;CACD;AA3CYtB,cAAc,GAAAuB,UAAA,EAL1B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW1B,cAAc,CA2C1B;SA3CYA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}