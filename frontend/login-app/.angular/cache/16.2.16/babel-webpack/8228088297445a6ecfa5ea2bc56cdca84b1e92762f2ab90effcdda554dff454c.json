{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nclass LoginComponent {\n  constructor(ls, router) {\n    this.ls = ls;\n    this.router = router;\n    this.loginForm = new FormGroup({\n      emailid: new FormControl(''),\n      password: new FormControl(''),\n      typeofuser: new FormControl('')\n    });\n    this.message = \"\";\n  } // DI for LoginService \n  signIn() {\n    let login = this.loginForm.value;\n    //console.log(login);\n    this.ls.signIn(login).subscribe({\n      next: result => {\n        // console.log(result)\n        this.message = result;\n        if (login.emailid != null) {\n          if (result == \"Admin login successfully\") {\n            //sessionStorage.setItem(\"user\",login.emailid);\n            this.router.navigate(['admin_home']);\n          } else if (result == \"Customer login successfully\") {\n            alert(login.emailid);\n            sessionStorage.setItem(\"user\", login.emailid);\n            this.router.navigate(['customer_home']);\n          } else {\n            this.message = result;\n          }\n        }\n      },\n      error: error => {\n        console.log(error);\n      },\n      complete: () => {\n        //console.log(\"Login completed\")\n      }\n    });\n    this.loginForm.reset();\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 23,\n      vars: 2,\n      consts: [[2, \"color\", \"red\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"formControlName\", \"emailid\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"radio\", \"formControlName\", \"typeofuser\", \"value\", \"admin\"], [\"type\", \"radio\", \"formControlName\", \"typeofuser\", \"value\", \"customer\"], [\"type\", \"submit\", \"value\", \"SignIn\"], [\"type\", \"reset\", \"value\", \"Reset\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"span\", 0);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"h2\");\n          i0.ɵɵtext(4, \"Login Page\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.signIn();\n          });\n          i0.ɵɵelementStart(6, \"label\");\n          i0.ɵɵtext(7, \"EmailId\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 2)(9, \"br\");\n          i0.ɵɵelementStart(10, \"label\");\n          i0.ɵɵtext(11, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 3)(13, \"br\");\n          i0.ɵɵelementStart(14, \"label\");\n          i0.ɵɵtext(15, \"TypeOfUser\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 4);\n          i0.ɵɵtext(17, \"Admin \");\n          i0.ɵɵelement(18, \"input\", 5);\n          i0.ɵɵtext(19, \"Customer\");\n          i0.ɵɵelement(20, \"br\")(21, \"input\", 6)(22, \"input\", 7);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.message);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { LoginComponent };","map":{"version":3,"names":["FormControl","FormGroup","LoginComponent","constructor","ls","router","loginForm","emailid","password","typeofuser","message","signIn","login","value","subscribe","next","result","navigate","alert","sessionStorage","setItem","error","console","log","complete","reset","i0","ɵɵdirectiveInject","i1","LoginService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_5_listener","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["D:\\Desktop\\Caltech 2024 Oct Batch\\capstone project\\frontend\\login-app\\src\\app\\login\\login.component.ts","D:\\Desktop\\Caltech 2024 Oct Batch\\capstone project\\frontend\\login-app\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  loginForm = new FormGroup({\n    emailid:new FormControl(''),\n    password:new FormControl(''),\n    typeofuser:new FormControl(''),\n  })\n\n  constructor(public ls:LoginService,public router:Router) { }   // DI for LoginService \n  message:string =\"\"\n  signIn():void {\n    let login = this.loginForm.value;\n    //console.log(login);\n    this.ls.signIn(login).subscribe(\n      {\n        next:(result)=> {\n         // console.log(result)\n         this.message = result;\n         if(login.emailid!=null){\n\n          if(result==\"Admin login successfully\"){\n            //sessionStorage.setItem(\"user\",login.emailid);\n            this.router.navigate(['admin_home']);\n         }else if(result==\"Customer login successfully\"){\n          alert(login.emailid)\n             sessionStorage.setItem(\"user\",login.emailid);\n            this.router.navigate(['customer_home']);\n         }else {\n          this.message = result;\n         }\n         \n         }\n         \n        },\n        error:(error)=> {\n          console.log(error)\n        },\n        complete:()=> {\n          //console.log(\"Login completed\")\n        }\n      });\n    this.loginForm.reset();\n  }\n}\n","<div>\n    <span style=\"color:red\">{{message}}</span>\n    <h2>Login Page</h2>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"signIn()\">\n        <label>EmailId</label>\n        <input type=\"email\" formControlName=\"emailid\"/><br/>\n        <label>Password</label>\n        <input type=\"password\" formControlName=\"password\"/><br/>\n        <label>TypeOfUser</label>\n        <input type=\"radio\" formControlName=\"typeofuser\" value=\"admin\"/>Admin\n        <input type=\"radio\" formControlName=\"typeofuser\" value=\"customer\"/>Customer<br/>\n        <input type=\"submit\" value=\"SignIn\" />\n        <input type=\"reset\" value=\"Reset\" />\n    </form>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}